# .github/workflows/release.yml

name: üöÄ Build & Release FontMuse

on:
  # –ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–≥–∞ –≤–∏–¥–∞ v1.0.0, v1.2.3 –∏ —Ç.–¥.
  push:
    tags: ['v*']
  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GitHub Actions
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: Linux
            artifact_name: FontMuse-linux-portable.AppImage
            asset_path: src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/appimage/*.AppImage
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: Windows
            artifact_name: FontMuse-windows-portable.zip
            asset_path: src-tauri/target/x86_64-pc-windows-msvc/release/FontMuse.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macOS (Intel)
            artifact_name: FontMuse-macos-intel-portable.tar.gz
            asset_path: src-tauri/target/x86_64-apple-darwin/release/bundle/macos/FontMuse.app
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macOS (Apple Silicon)
            artifact_name: FontMuse-macos-arm-portable.tar.gz
            asset_path: src-tauri/target/aarch64-apple-darwin/release/bundle/macos/FontMuse.app

    runs-on: ${{ matrix.os }}

    steps:
      - name:  checkout
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: ü¶Ä Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: üêß Install Linux dependencies
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: üì¶ Install frontend dependencies
        run: pnpm install

      - name: üî® Build portable app
        run: pnpm tauri build --target ${{ matrix.target }} --config src-tauri/tauri.portable.conf.json

      - name: üì¶ Package release assets
        shell: bash
        run: |
          # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
          mkdir -p artifacts

          # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –∏ –ø—É—Ç—å –∫ –∞—Å—Å–µ—Ç—É
          ASSET_PATH="${{ matrix.asset_path }}"
          ARTIFACT_NAME="${{ matrix.artifact_name }}"

          # –£–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
          if [[ "$ARTIFACT_NAME" == *.zip ]]; then
            # –î–ª—è Windows .exe -> .zip
            7z a "artifacts/$ARTIFACT_NAME" "$ASSET_PATH"
          elif [[ "$ARTIFACT_NAME" == *.tar.gz ]]; then
            # –î–ª—è macOS .app -> .tar.gz
            tar -czf "artifacts/$ARTIFACT_NAME" -C "$(dirname "$ASSET_PATH")" "$(basename "$ASSET_PATH")"
          else
            # –î–ª—è Linux .AppImage –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º
            cp "$ASSET_PATH" "artifacts/$ARTIFACT_NAME"
          fi

      - name: üì§ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}

  release:
    name: üöÄ Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: üì• Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          # –ò–º—è —Ä–µ–ª–∏–∑–∞ –±—É–¥–µ—Ç "FontMuse v1.0.0"
          name: FontMuse ${{ github.ref_name }}
          # –ò—â–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –≤–æ –≤—Å–µ—Ö —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
          files: artifacts/**/*
          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}